#!/bin/bash
# Author: Vicente Adolfo Bolea Sanchez <vicente,bolea@gmail.com>
# DFMSH, DFM again written in BASH
#
#
 
function find_repository () 
{
 [ -z $REPOSITORY ] && REPOSITORY=`pwd`
 BACKUPDIR="$HOME/.dfmsh-back"
 IGNOREFILE="$REPOSITORY/.dfmshignore"
}

function _install () 
{
for file in $(_list_files); do
  file=$(basename $file)

  local file_type=$(file --mime-type -b "$HOME/$file");
  if [ "$file_type" = "inode/symlink" ]; then
    continue;
  else
    if [ -e "$HOME/$file" ]; then
      [ -e $BACKUPDIR ] || mkdir $BACKUPDIR
      mv "$HOME/$file" "$BACKUPDIR/$file"
    fi
    ln -s $REPOSITORY/$file $HOME/$file
    echo $file " INSTALLED."
  fi
done
}

function _uninstall () 
{
  for file in $(_list_files); do

    local file_type=$(file --mime-type -b "$HOME/$file");
    if [ "$file_type" = "inode/symlink" ]; then
      rm "$HOME/$file"
      echo $file " UNINSTALLED."
    fi

    if [ -e "$BACKUPDIR/$file" ]; then 
      mv "$BACKUPDIR/$file" $HOME
      echo $file " RESTORED."
    fi
    rmdir $BACKUPDIR
    echo "Removed BACKUPDIR: " $BACKUPDIR

  done
}

function _list_files () 
{
  [ -e $IGNOREFILE ] && . $IGNOREFILE
  IGNORED_FILES="${IGNORED_FILES[*]} README.md .git/ bin/ .dfmshignore .. ."

  local files=`ls -a $REPOSITORY | xargs`
  local final_files=""

  for file in $files; do
    file=$(basename $file)
    [[ $IGNORED_FILES =~ $file ]] && continue;
    final_files+=" "$file
  done
  [ -z "$final_files" ] && echo "No input files" && exit  
  echo $final_files
}

find_repository;

case "$1" in
  --install|-i)   _install    ;;
  --uninstall|-u) _uninstall  ;;
  --list|-l)      _list_files ;;
  *) 
    echo -e " Dotfiles Manager BASH\n"\
    "  --install, -i    install dotfiles.\n"\
    "  --uninstall, -u  uninstall dotfiles.\n"\
    "  --list, -l       list dotfiles which will be un/installed.\n" 
    ;;
esac
# vim: ft=sh
